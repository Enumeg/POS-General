<ResourceDictionary x:Class="POS.Styles.DateTimePicker" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ex="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:Microsoft_Windows_Controls_Chromes="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit"
        xmlns:Microsoft_Windows_Controls_Core_Converters="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit">
    <Style x:Key="DTP" TargetType="{x:Type ex:DateTimePicker}">
        <Setter Property="ShowButtonSpinner" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Format" Value="Custom" />
        <Setter Property="FormatString" Value="yyyy/MM/dd" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="TimeWatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ex:DateTimePicker}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ex:ButtonSpinner x:Name="PART_Spinner" AllowSpin="{TemplateBinding AllowSpin}" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsTabStop="False"
                                        ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
                                    <ex:WatermarkTextBox x:Name="PART_TextBox" Padding="2.5" AcceptsReturn="False" BorderThickness="0"
                                            Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}"
                                            FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="20"
                                            TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="NoWrap"
                                            Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}"
                                            WatermarkTemplate="{TemplateBinding WatermarkTemplate}" Watermark="{TemplateBinding Watermark}" />
                                </ex:ButtonSpinner>
                                <ToggleButton x:Name="_calendarToggleButton" Background="White" Grid.Column="1"
                                        IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False">
                                    <ToggleButton.IsHitTestVisible>
                                        <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <ex:InverseBoolConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </ToggleButton.IsHitTestVisible>
                                    <ToggleButton.IsEnabled>
                                        <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <ex:InverseBoolConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </ToggleButton.IsEnabled>
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <ex:ButtonChrome x:Name="ToggleButtonChrome" CornerRadius="0,1.5,1.5,0" InnerCornerRadius="0,0.5,0.5,0"
                                                                    RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"
                                                                    RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ex:DateTimePicker}}}"
                                                                    RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ex:DateTimePicker}}}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                            Content="{TemplateBinding Content}"
                                                                            ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Stretch"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" />
                                                                    <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                                        <Path x:Name="Arrow"
                                                                                Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                                                                Fill="Black" Height="4" Width="7" />
                                                                    </Grid>
                                                                </Grid>
                                                            </ex:ButtonChrome>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Popup IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}" StaysOpen="False">
                                <Border BorderThickness="1" Padding="3">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0" />
                                            <GradientStop Color="#FF8399A9" Offset="0.375" />
                                            <GradientStop Color="#FF718597" Offset="0.375" />
                                            <GradientStop Color="#FF617584" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Color="#FFE8EBED" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <StackPanel>
                                        <Calendar x:Name="Part_Calendar" SelectedDatesChanged="Part_Calendar_SelectedDatesChanged" BorderThickness="0" />
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="View_DateTimePicker" TargetType="{x:Type ex:DateTimePicker}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="FormatString" Value="yyyy/MM/dd" />
        <Setter Property="Format" Value="Custom" />
        <Setter Property="TimeWatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ex:DateTimePicker}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{TemplateBinding Text}" Style="{DynamicResource ResourceKey=View_TextBlock}" />
                                <ex:ButtonSpinner Visibility="Collapsed" x:Name="Spinner" AllowSpin="{TemplateBinding AllowSpin}"
                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsTabStop="False"
                                        ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
                                    <ex:WatermarkTextBox x:Name="TextBox" AcceptsReturn="False" BorderThickness="0" Background="{TemplateBinding Background}"
                                            Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"
                                            FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"
                                            TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="NoWrap"
                                            Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}"
                                            WatermarkTemplate="{TemplateBinding WatermarkTemplate}" Watermark="{TemplateBinding Watermark}">
                                        <ex:WatermarkTextBox.IsReadOnly>
                                            <Binding Path="IsEditable" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <Microsoft_Windows_Controls_Core_Converters:InverseBoolConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </ex:WatermarkTextBox.IsReadOnly>
                                    </ex:WatermarkTextBox>
                                </ex:ButtonSpinner>
                                <ToggleButton Visibility="Collapsed" x:Name="_calendarToggleButton" Background="White" Grid.Column="1"
                                        IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Microsoft_Windows_Controls_Chromes:ButtonChrome x:Name="ToggleButtonChrome" CornerRadius="0,1,1,0"
                                                                    InnerCornerRadius="0" RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                                    RenderPressed="{TemplateBinding IsPressed}"
                                                                    RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ex:DateTimePicker}}}"
                                                                    RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ex:DateTimePicker}}}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                            Content="{TemplateBinding Content}"
                                                                            ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Stretch"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" />
                                                                    <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                                        <Path
                                                                                Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                                                                Fill="Black" Height="4" Width="7" />
                                                                    </Grid>
                                                                </Grid>
                                                            </Microsoft_Windows_Controls_Chromes:ButtonChrome>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Popup IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}" StaysOpen="False" Name="Pop">
                                <Border BorderThickness="1" Padding="3">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0" />
                                            <GradientStop Color="#FF8399A9" Offset="0.375" />
                                            <GradientStop Color="#FF718597" Offset="0.375" />
                                            <GradientStop Color="#FF617584" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Color="#FFE8EBED" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <StackPanel>
                                        <Calendar x:Name="Part_Calendar" SelectedDatesChanged="Part_Calendar_SelectedDatesChanged" BorderThickness="0" />
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ex:DateTimePicker}" x:Key="Search_DateTimePicker" BasedOn="{StaticResource DTP}">
        <Setter Property="Margin" Value="0,3,5,0" />
        <Setter Property="Value" Value="{x:Static sys:DateTime.Now}" />
    </Style>
    <Style TargetType="{x:Type ex:DateTimePicker}" x:Key="Edit_DateTimePicker" BasedOn="{StaticResource DTP}">
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Value" Value="{x:Static sys:DateTime.Now}" />
    </Style>
    <Style TargetType="{x:Type ex:DateTimePicker}" x:Key="Empty_DateTimePicker" BasedOn="{StaticResource DTP}">
        <Setter Property="Margin" Value="0,3,0,0" />
    </Style>
    <Style TargetType="{x:Type ex:TimePicker}" x:Key="TP">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Tahoma" />
    </Style>
    <Style TargetType="ex:TimePicker" x:Key="TP1" BasedOn="{StaticResource TP}">
        <Setter Property="Value" Value="{x:Static sys:DateTime.Now}" />
    </Style>
</ResourceDictionary>